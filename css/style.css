/*
Comentario en CSS

las reglas css constan de dos partes
1) selector 
2) bloque de declaraciones: {
  -atributo: valor;
  -atributo-de-mas-de-dos-palabras: otro valor;
}*/

/*Son mala pr√°ctica porque son bloqueantes a la hora de que el navegador lee esta instrucci√≥n*/
@import url("otro.css");

h1 {
  background-color: black;
}

/*
Links de referencia y documentaci√≥n
  - https://es.wikipedia.org/wiki/Hoja_de...
  - https://www.w3.org/html/logo/
  - https://www.w3.org/standards/webdesig...
  - https://www.w3.org/TR/css-2020/
  - https://developer.mozilla.org/es/docs...
*/

/*
Selectores b√°sicos
1) Etiquetas - son elementos HTML
2) Identificadores - atributo id - #
3) Clases -atributo class - .
*/

p {
  color: midnightblue;
}

/*Dar estilos con id se considera un antipatr√≥n*/
#parrafo-dos {
  background-color: skyblue;
}

/*Dar estilos con clases nos permite reutilzar nuestro c√≥digo CSS*/
.bg-skyblue {
  background-color: skyblue;
}

.bg-steelblue {
  background-color: steelblue;
}
.text-20 {
  font-size: 20px;
}

.text-32 {
  font-size: 32px;
}

.text-white {
  color: white;
}

.hijos-directos > li {
  background-color: thistle;
}

.hijos-descendientes b {
  background-color: thistle;
}

/*Los selectores de hermanos van a aplicar a los elementos que son hermanos y que est√©n por debajo de elemento de referencia*/
.hermanos-general ~ li {
  background-color: thistle;
}

.hermanos-adyacentes + li {
  background-color: thistle;
}

/*Selectores de atributos*/
.selectores-atributos a[href] {
  color: orangered;
}

.selectores-atributos a[target="_blank"] {
  font-weight: bold;
}

/*El comod√≠n del * aplica el estilo si contiene el texto en cuesti√≥n en cualquier parte*/
.selectores-atributos a[href*="jonmircha"] {
  font-size: 24px;
}

/*El comod√≠n del ^ aplica el estilo si contiene el texto en cuesti√≥n al inicio*/
.selectores-atributos a[href^="http://"]
{
  text-decoration: none;
}

/*El comod√≠n del $ aplica el estilo si contiene el texto en cuesti√≥n al final*/
.selectores-atributos a[href$=".com"] {
  background-color: black;
}

/*El comod√≠n del ~ aplica el estilo si contiene el texto en cuesti√≥n en una lista separada por espacios*/
.selectores-atributos a[class~="cursos"] {
  background-color: midnightblue;
}

/*El comod√≠n del | aplica el estilo si contiene el texto en cuesti√≥n en una lista separada por espaciosy que despu√©s del texto en cuesti√≥n pueda venir un gui√≥n medio (-)*/
.selectores-atributos a[class|="menu"] {
  font-style: italic;
}

/*Selector universal*/
* {
  font-family: sans-serif;
}

/*Selector universal contextualmente*/
.selector-universal * {
  font-size: 24px;
}

/*
Pseudoclases - Dan estilos dependiendo del contexto, posici√≥n o estado del elemento 
https://developer.mozilla.org/es/docs/Web/CSS/Pseudo-classes
*/

.form-pseudoclases *:required {
  border-color: yellow;
}

.form-pseudoclases *:valid {
  border-color: green;
}

.form-pseudoclases *:invalid {
  border-color: red;
}

.form-pseudoclases *:focus {
  background-color: skyblue;
}

.form-pseudoclases *:disabled {
  background-color: pink;
}

.menu-pseudoclases a:visited {
  color: olive;
}

.menu-pseudoclases a:hover {
  color: orange;
}

.p-pseudoclases:hover {
  font-size: 20px;
}

#temario-css:target {
  background-color: lightgreen;
}

.lista-pseudoclases li:first-child {
  color: green;
}

.lista-pseudoclases li:last-child {
  color: violet;
}

.lista-pseudoclases li:nth-child(3) {
  color: navy;
}

.lista-pseudoclases li:nth-child(4n) {
  font-size: 20px;
}

.lista-pseudoclases li:nth-child(3n + 1) {
  font-weight: bold;
}

.lista-pseudoclases li:nth-child(even) {
  background-color: yellow;
}

.lista-pseudoclases li:nth-child(odd) {
  background-color: orange;
}

.article-pseudoclases p:first-of-type {
  background-color: pink;
}

.article-pseudoclases p:last-of-type {
  background-color: violet;
}

.article-pseudoclases p:nth-of-type(3) {
  background-color: fuchsia;
}

.article-pseudoclases * {
  background-color: beige;
}

/*
Pseudoelementos - Dan estilso a partes espec√≠ficas de un elemento, se usa el :: para diferenciarlos de las pseudoclases 
https://developer.mozilla.org/es/docs/Web/CSS/Pseudo-elements
*/

.saga-geminis::before {
  content: "üèãÔ∏è";
}

.saga-geminis::after {
  content: "‚ôä";
}

.saga-precio::before {
  content: "üí≤";
}

.saga-precio::after {
  content: "USD";
  font-weight: bold;
}

.p-pseudoelementos::first-letter {
  font-weight: bold;
  font-size: 32px;
}

.p-pseudoelementos::first-line {
  color: coral;
}

.p-pseudoelementos::selection {
  color: greenyellow;
  background-color: black;
}

.input-pseudoelementos::placeholder {
  color: green;
}

/*Agrupar selectores*/

.form-agrupar-selectores input[type="text"],
.form-agrupar-selectores input[type="email"],
.form-agrupar-selectores textarea {
  border-color: yellow;
  border-width: 2px;
  border-style: dashed;
  background-color: black;
  font-size: 20px;
  display: block;
  width: 300px;
}

/*
El algoritmo de CSS: Es la forma en que el navegador aplica los estiilos al documento HTML. Es vital entender este concepto para que entiendas como se aplican y en algunas ocasiones se sobreescribem las reglas CSS
1) La C√°scada
2) La Especificidad
3) La herencia

La C√°scada es el mescanismo en que el navegador aplica los estilos. Y toma en cuenta lo siguiente en este orden:
1) El origen del c√≥digo:
 -El User Agent (los estilos por defecto del navegador)
 -Personalizaciones del usuario.
 -Los estilos del autor.
2) La Especifidad del Selector
3) Orden de aparici√≥n

La Especificidad es el peso que tiene un selector cuandp hay conflicto de estilos. Se calcula de la siguiente forma:
  Etiquetas y pseudo elementos --------------------0,0,0,1
  Clases, atributos y pseudoclases ----------------0,0,1,0
  Identificadores ---------------------------------0,1,0,0
  Estilos en l√≠nea --------------------------------1,0,0,0
  !important --------------------------Rompe la especifidad

La Herencia, es la capacidad de un selectorde obtener (heredar) los valores de sus ancestros m√°s cercanos, para aplicarla se usa el valor inherit, si queremos evitarla podemos asignar otro valor o inicializar la propiedad en cuesti√≥n con el valor initial
*/

blockquote#cita-marco.cita-marco {
  background-color: lightsteelblue;
}

blockquote {
  background-color: burlywood;
}

#cita-marco {
  background-color: lightgreen;
}

blockquote.cita-marco {
  background-color: tomato;
}

.cita-marco {
  background-color: cornflowerblue;
}

.cita-marco {
  background-color: mediumaquamarine !important;
}

blockquote#cita-marco {
  background-color: lightsalmon;
}

.cita-marco {
  background-color: moccasin !important; /*Mala pr√°ctica*/
  background-color: darkorange !important;
  font-size: 32px;
  border-style: dotted;
  border-color: red;
}

.cita-marco cite {
  background-color: pink;
  background-color: inherit;
  font-size: 24px;
  font-size: initial;
  border-style: inherit;
  border-color: inherit;
}

/*
https://autoprefixer.github.io/
https://caniuse.com/
Prefijos de los navegadores
-webkit-user-select:none;
-moz-user-select: none;
-ms-user-select: none;
*/
